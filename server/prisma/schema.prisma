// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  clerkUserId String     @id
  email       String
  role        String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  volunteer   Volunteer?
}

model Volunteer {
  user                           User                             @relation(fields: [userId], references: [clerkUserId])
  userId                         String                           @id
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime                         @updatedAt
  firstName                      String
  lastName                       String
  dateOfBirth                    DateTime
  gender                         String
  occupation                     String                           @db.VarChar(1000)
  school                         String                           @db.VarChar(1000)
  educationBackground            String                           @db.VarChar(1000)
  driving                        Boolean
  ownsVehicle                    Boolean
  commitmentLevel                String                           @db.VarChar(1000)
  phone                          String
  residentialStatus              String
  skills                         String                           @db.VarChar(1000)
  experience                     String                           @db.VarChar(1000)
  address                        String                           @db.VarChar(1000)
  postalCode                     String
  VolunteerPreference            VolunteerPreference[]
  VolunteerOpportunityEnrollment VolunteerOpportunityEnrollment[]

  @@index([userId])
}

model VolunteerPreference {
  volunteer   Volunteer @relation(fields: [volunteerId], references: [userId])
  volunteerId String
  preference  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@id([volunteerId, preference])
  @@index([volunteerId])
}

model Opportunity {
  id                             String                           @id @default(uuid())
  name                           String                           @db.VarChar(1000)
  description                    String                           @db.VarChar(1000)
  start                          DateTime
  end                            DateTime
  location                       String                           @db.VarChar(1000)
  durationMinutes                Int
  imageUrl                       String
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime                         @updatedAt
  VolunteerOpportunityEnrollment VolunteerOpportunityEnrollment[]
  archive                        Boolean
}

model VolunteerOpportunityEnrollment {
  volunteer     Volunteer   @relation(fields: [volunteerId], references: [userId])
  volunteerId   String
  opportunity   Opportunity @relation(fields: [opportunityId], references: [id])
  opportunityId String
  adminApproved Boolean
  didAttend     Boolean
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@id([volunteerId, opportunityId])
  @@index([opportunityId])
  @@index([volunteerId])
}
